/*
 * Merchants Locations API
 * Merchants Locations API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.merchants.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Merchant Search Request Info
 */
@ApiModel(description = "Merchant Search Request Info")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-04T16:00:00.598858300-05:00[America/Chicago]")
public class MerchantSearch {
  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_COUNTRY_SUBDIVISION_CODE = "countrySubdivisionCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_SUBDIVISION_CODE)
  private String countrySubdivisionCode;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private String latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private String longitude;

  public static final String SERIALIZED_NAME_MERCHANT_CATEGORY = "merchantCategory";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CATEGORY)
  private String merchantCategory;

  public static final String SERIALIZED_NAME_MERCHANT_TYPE = "merchantType";
  @SerializedName(SERIALIZED_NAME_MERCHANT_TYPE)
  private String merchantType;

  public static final String SERIALIZED_NAME_OFFER_MERCHANT_ID = "offerMerchantId";
  @SerializedName(SERIALIZED_NAME_OFFER_MERCHANT_ID)
  private String offerMerchantId;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;


  public MerchantSearch addressLine1(String addressLine1) {
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Line 1 of the street address for the merchant location. Usually includes the street number and name. This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter and either City parameter or PostalCode parameter.
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4033 Veterans Memorial Pkwy", value = "Line 1 of the street address for the merchant location. Usually includes the street number and name. This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter and either City parameter or PostalCode parameter.")

  public String getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public MerchantSearch addressLine2(String addressLine2) {
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Line 2 of the street address usually an apartment number or suite number. This parameter is used rarely and is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter and either City parameter or PostalCode parameter.
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Apt 1", value = "Line 2 of the street address usually an apartment number or suite number. This parameter is used rarely and is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter and either City parameter or PostalCode parameter.")

  public String getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public MerchantSearch city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * The name of the city for a merchant location. This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SAINT PETERS", value = "The name of the city for a merchant location. This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public MerchantSearch countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Any two digit country code for an Merchant location. Valid values are two digit alpha country code. This parameter is ignored if latitude and longitude are provided. This parameter is required if any other address information is provided including AddressLine1 AddressLine2 City PostalCode or CountrySubdivision.
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USA", value = "Any two digit country code for an Merchant location. Valid values are two digit alpha country code. This parameter is ignored if latitude and longitude are provided. This parameter is required if any other address information is provided including AddressLine1 AddressLine2 City PostalCode or CountrySubdivision.")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public MerchantSearch countrySubdivisionCode(String countrySubdivisionCode) {
    
    this.countrySubdivisionCode = countrySubdivisionCode;
    return this;
  }

   /**
   * The state or province for a merchant location (only supported for US and Canada locations). This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.
   * @return countrySubdivisionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MO", value = "The state or province for a merchant location (only supported for US and Canada locations). This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.")

  public String getCountrySubdivisionCode() {
    return countrySubdivisionCode;
  }


  public void setCountrySubdivisionCode(String countrySubdivisionCode) {
    this.countrySubdivisionCode = countrySubdivisionCode;
  }


  public MerchantSearch latitude(String latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * The latitude of a merchant location. If latitude is provided longitude must also be provided.
   * @return latitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "38.795089", value = "The latitude of a merchant location. If latitude is provided longitude must also be provided.")

  public String getLatitude() {
    return latitude;
  }


  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }


  public MerchantSearch longitude(String longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * The longitude of a merchant location. If longitude is provided latitude must also be provided.
   * @return longitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-90.572346", value = "The longitude of a merchant location. If longitude is provided latitude must also be provided.")

  public String getLongitude() {
    return longitude;
  }


  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }


  public MerchantSearch merchantCategory(String merchantCategory) {
    
    this.merchantCategory = merchantCategory;
    return this;
  }

   /**
   * Category Id of the merchant location. See the Categories resource for a list of valid categories.  Input may be a comma delimited list of category ids.
   * @return merchantCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Category Id of the merchant location. See the Categories resource for a list of valid categories.  Input may be a comma delimited list of category ids.")

  public String getMerchantCategory() {
    return merchantCategory;
  }


  public void setMerchantCategory(String merchantCategory) {
    this.merchantCategory = merchantCategory;
  }


  public MerchantSearch merchantType(String merchantType) {
    
    this.merchantType = merchantType;
    return this;
  }

   /**
   * Type of merchant location. Options are &#39;paypass&#39; &#39;repower&#39; &#39;easysavings&#39; and &#39;cashback&#39;.
   * @return merchantType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "easysavings", value = "Type of merchant location. Options are 'paypass' 'repower' 'easysavings' and 'cashback'.")

  public String getMerchantType() {
    return merchantType;
  }


  public void setMerchantType(String merchantType) {
    this.merchantType = merchantType;
  }


  public MerchantSearch offerMerchantId(String offerMerchantId) {
    
    this.offerMerchantId = offerMerchantId;
    return this;
  }

   /**
   * Unique identifier that represents the merchant sponsor of an offer. Any valid merchant ID.
   * @return offerMerchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1143109", value = "Unique identifier that represents the merchant sponsor of an offer. Any valid merchant ID.")

  public String getOfferMerchantId() {
    return offerMerchantId;
  }


  public void setOfferMerchantId(String offerMerchantId) {
    this.offerMerchantId = offerMerchantId;
  }


  public MerchantSearch postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The zip code or postal code for an Merchant location. This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "63376", value = "The zip code or postal code for an Merchant location. This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantSearch merchantSearch = (MerchantSearch) o;
    return Objects.equals(this.addressLine1, merchantSearch.addressLine1) &&
        Objects.equals(this.addressLine2, merchantSearch.addressLine2) &&
        Objects.equals(this.city, merchantSearch.city) &&
        Objects.equals(this.countryCode, merchantSearch.countryCode) &&
        Objects.equals(this.countrySubdivisionCode, merchantSearch.countrySubdivisionCode) &&
        Objects.equals(this.latitude, merchantSearch.latitude) &&
        Objects.equals(this.longitude, merchantSearch.longitude) &&
        Objects.equals(this.merchantCategory, merchantSearch.merchantCategory) &&
        Objects.equals(this.merchantType, merchantSearch.merchantType) &&
        Objects.equals(this.offerMerchantId, merchantSearch.offerMerchantId) &&
        Objects.equals(this.postalCode, merchantSearch.postalCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine1, addressLine2, city, countryCode, countrySubdivisionCode, latitude, longitude, merchantCategory, merchantType, offerMerchantId, postalCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantSearch {\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    countrySubdivisionCode: ").append(toIndentedString(countrySubdivisionCode)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    merchantCategory: ").append(toIndentedString(merchantCategory)).append("\n");
    sb.append("    merchantType: ").append(toIndentedString(merchantType)).append("\n");
    sb.append("    offerMerchantId: ").append(toIndentedString(offerMerchantId)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

