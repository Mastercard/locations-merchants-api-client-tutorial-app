/*
 * Merchants Locations API
 * Merchants Locations API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.merchants.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Merchant detail information
 */
@ApiModel(description = "Merchant detail information")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-04T16:00:00.598858300-05:00[America/Chicago]")
public class Merchant {
  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_CASHBACK_MAXIMUM_AMOUNT = "cashbackMaximumAmount";
  @SerializedName(SERIALIZED_NAME_CASHBACK_MAXIMUM_AMOUNT)
  private String cashbackMaximumAmount;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_COUNTRY_NAME = "countryName";
  @SerializedName(SERIALIZED_NAME_COUNTRY_NAME)
  private String countryName;

  public static final String SERIALIZED_NAME_COUNTRY_SUBDIVISION_CODE = "countrySubdivisionCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_SUBDIVISION_CODE)
  private String countrySubdivisionCode;

  public static final String SERIALIZED_NAME_COUNTRY_SUBDIVISION_NAME = "countrySubdivisionName";
  @SerializedName(SERIALIZED_NAME_COUNTRY_SUBDIVISION_NAME)
  private String countrySubdivisionName;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_DISTANCE = "distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private Double distance;

  public static final String SERIALIZED_NAME_DISTANCE_UNIT = "distanceUnit";
  @SerializedName(SERIALIZED_NAME_DISTANCE_UNIT)
  private String distanceUnit;

  public static final String SERIALIZED_NAME_EASY_SAVINGS_MERCHANT_OFFER_ID = "easySavingsMerchantOfferId";
  @SerializedName(SERIALIZED_NAME_EASY_SAVINGS_MERCHANT_OFFER_ID)
  private String easySavingsMerchantOfferId;

  public static final String SERIALIZED_NAME_GEOCODING_RESULT = "geocodingResult";
  @SerializedName(SERIALIZED_NAME_GEOCODING_RESULT)
  private String geocodingResult;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IS_PAY_PASS_CONCESSION = "isPayPassConcession";
  @SerializedName(SERIALIZED_NAME_IS_PAY_PASS_CONCESSION)
  private Boolean isPayPassConcession;

  public static final String SERIALIZED_NAME_IS_PAY_PASS_PHARMACY = "isPayPassPharmacy";
  @SerializedName(SERIALIZED_NAME_IS_PAY_PASS_PHARMACY)
  private Boolean isPayPassPharmacy;

  public static final String SERIALIZED_NAME_IS_PAY_PASS_FUEL_PUMP = "isPayPassFuelPump";
  @SerializedName(SERIALIZED_NAME_IS_PAY_PASS_FUEL_PUMP)
  private Boolean isPayPassFuelPump;

  public static final String SERIALIZED_NAME_IS_PAY_PASS_TOLL_BOOTH = "isPayPassTollBooth";
  @SerializedName(SERIALIZED_NAME_IS_PAY_PASS_TOLL_BOOTH)
  private Boolean isPayPassTollBooth;

  public static final String SERIALIZED_NAME_IS_PAY_PASS_DRIVE_THROUGH = "isPayPassDriveThrough";
  @SerializedName(SERIALIZED_NAME_IS_PAY_PASS_DRIVE_THROUGH)
  private Boolean isPayPassDriveThrough;

  public static final String SERIALIZED_NAME_IS_PAY_PASS_REGISTER = "isPayPassRegister";
  @SerializedName(SERIALIZED_NAME_IS_PAY_PASS_REGISTER)
  private Boolean isPayPassRegister;

  public static final String SERIALIZED_NAME_IS_PAY_PASS_TICKETING = "isPayPassTicketing";
  @SerializedName(SERIALIZED_NAME_IS_PAY_PASS_TICKETING)
  private Boolean isPayPassTicketing;

  public static final String SERIALIZED_NAME_IS_PAY_PASS_VENDING_MACHINE = "isPayPassVendingMachine";
  @SerializedName(SERIALIZED_NAME_IS_PAY_PASS_VENDING_MACHINE)
  private Boolean isPayPassVendingMachine;

  public static final String SERIALIZED_NAME_IS_REPOWER_BY_CARD_SWIPE_SUPPORTED = "isRepowerByCardSwipeSupported";
  @SerializedName(SERIALIZED_NAME_IS_REPOWER_BY_CARD_SWIPE_SUPPORTED)
  private Boolean isRepowerByCardSwipeSupported;

  public static final String SERIALIZED_NAME_IS_REPOWER_BY_MONEY_PAK_SUPPORTED = "isRepowerByMoneyPakSupported";
  @SerializedName(SERIALIZED_NAME_IS_REPOWER_BY_MONEY_PAK_SUPPORTED)
  private Boolean isRepowerByMoneyPakSupported;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private String latitude;

  public static final String SERIALIZED_NAME_LOCATION_NAME = "locationName";
  @SerializedName(SERIALIZED_NAME_LOCATION_NAME)
  private String locationName;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private String longitude;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "websiteUrl";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;


  public Merchant addressLine1(String addressLine1) {
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Line 1 of the street address for the merchant location. Usually includes the street number and name.
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1 Oak Street", value = "Line 1 of the street address for the merchant location. Usually includes the street number and name.")

  public String getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public Merchant addressLine2(String addressLine2) {
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Line 2 of the street address usually an apartment number or suite number.
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Apt 1", value = "Line 2 of the street address usually an apartment number or suite number.")

  public String getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public Merchant cashbackMaximumAmount(String cashbackMaximumAmount) {
    
    this.cashbackMaximumAmount = cashbackMaximumAmount;
    return this;
  }

   /**
   * Maximum cashback amount permitted at the location.
   * @return cashbackMaximumAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "40", value = "Maximum cashback amount permitted at the location.")

  public String getCashbackMaximumAmount() {
    return cashbackMaximumAmount;
  }


  public void setCashbackMaximumAmount(String cashbackMaximumAmount) {
    this.cashbackMaximumAmount = cashbackMaximumAmount;
  }


  public Merchant category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Merchant&#39;s category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10 - Grocery Stores & Supermarkets", value = "Merchant's category")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public Merchant countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Two digit alpha country code as defined in ISO
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "US", value = "Two digit alpha country code as defined in ISO")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public Merchant countryName(String countryName) {
    
    this.countryName = countryName;
    return this;
  }

   /**
   * Name of the country.
   * @return countryName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "United States", value = "Name of the country.")

  public String getCountryName() {
    return countryName;
  }


  public void setCountryName(String countryName) {
    this.countryName = countryName;
  }


  public Merchant countrySubdivisionCode(String countrySubdivisionCode) {
    
    this.countrySubdivisionCode = countrySubdivisionCode;
    return this;
  }

   /**
   * Code of the state or province for a merchant location.
   * @return countrySubdivisionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MO", value = "Code of the state or province for a merchant location.")

  public String getCountrySubdivisionCode() {
    return countrySubdivisionCode;
  }


  public void setCountrySubdivisionCode(String countrySubdivisionCode) {
    this.countrySubdivisionCode = countrySubdivisionCode;
  }


  public Merchant countrySubdivisionName(String countrySubdivisionName) {
    
    this.countrySubdivisionName = countrySubdivisionName;
    return this;
  }

   /**
   * Name of the state or province for a merchant location.
   * @return countrySubdivisionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Missouri", value = "Name of the state or province for a merchant location.")

  public String getCountrySubdivisionName() {
    return countrySubdivisionName;
  }


  public void setCountrySubdivisionName(String countrySubdivisionName) {
    this.countrySubdivisionName = countrySubdivisionName;
  }


  public Merchant city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * The name of the city for a merchant location.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "OFallon", value = "The name of the city for a merchant location.")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public Merchant distance(Double distance) {
    
    this.distance = distance;
    return this;
  }

   /**
   * This is the numerical value for the distance from the provided location to the selected merchant.
   * @return distance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.75723000000001", value = "This is the numerical value for the distance from the provided location to the selected merchant.")

  public Double getDistance() {
    return distance;
  }


  public void setDistance(Double distance) {
    this.distance = distance;
  }


  public Merchant distanceUnit(String distanceUnit) {
    
    this.distanceUnit = distanceUnit;
    return this;
  }

   /**
   * This is the unit of measure value for the distance from the provided location to the selected merchant. Options are KM and MILE.
   * @return distanceUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MILE", value = "This is the unit of measure value for the distance from the provided location to the selected merchant. Options are KM and MILE.")

  public String getDistanceUnit() {
    return distanceUnit;
  }


  public void setDistanceUnit(String distanceUnit) {
    this.distanceUnit = distanceUnit;
  }


  public Merchant easySavingsMerchantOfferId(String easySavingsMerchantOfferId) {
    
    this.easySavingsMerchantOfferId = easySavingsMerchantOfferId;
    return this;
  }

   /**
   * Merchant&#39;s Easy Savings Offer Id
   * @return easySavingsMerchantOfferId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1143109", value = "Merchant's Easy Savings Offer Id")

  public String getEasySavingsMerchantOfferId() {
    return easySavingsMerchantOfferId;
  }


  public void setEasySavingsMerchantOfferId(String easySavingsMerchantOfferId) {
    this.easySavingsMerchantOfferId = easySavingsMerchantOfferId;
  }


  public Merchant geocodingResult(String geocodingResult) {
    
    this.geocodingResult = geocodingResult;
    return this;
  }

   /**
   * GeocodingResult for the merchant
   * @return geocodingResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "S8HPNTSCZA", value = "GeocodingResult for the merchant")

  public String getGeocodingResult() {
    return geocodingResult;
  }


  public void setGeocodingResult(String geocodingResult) {
    this.geocodingResult = geocodingResult;
  }


  public Merchant id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Numerical merchant identifier.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1505451132", value = "Numerical merchant identifier.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Merchant isPayPassConcession(Boolean isPayPassConcession) {
    
    this.isPayPassConcession = isPayPassConcession;
    return this;
  }

   /**
   * Boolean value which indicates if the concession area is equipped with a PayPass card reader.
   * @return isPayPassConcession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the concession area is equipped with a PayPass card reader.")

  public Boolean getIsPayPassConcession() {
    return isPayPassConcession;
  }


  public void setIsPayPassConcession(Boolean isPayPassConcession) {
    this.isPayPassConcession = isPayPassConcession;
  }


  public Merchant isPayPassPharmacy(Boolean isPayPassPharmacy) {
    
    this.isPayPassPharmacy = isPayPassPharmacy;
    return this;
  }

   /**
   * Boolean value which indicates if the pharmacy is equipped with a PayPass card reader.
   * @return isPayPassPharmacy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the pharmacy is equipped with a PayPass card reader.")

  public Boolean getIsPayPassPharmacy() {
    return isPayPassPharmacy;
  }


  public void setIsPayPassPharmacy(Boolean isPayPassPharmacy) {
    this.isPayPassPharmacy = isPayPassPharmacy;
  }


  public Merchant isPayPassFuelPump(Boolean isPayPassFuelPump) {
    
    this.isPayPassFuelPump = isPayPassFuelPump;
    return this;
  }

   /**
   * Boolean value which indicates if the fuel pump is equipped with a PayPass card reader.
   * @return isPayPassFuelPump
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the fuel pump is equipped with a PayPass card reader.")

  public Boolean getIsPayPassFuelPump() {
    return isPayPassFuelPump;
  }


  public void setIsPayPassFuelPump(Boolean isPayPassFuelPump) {
    this.isPayPassFuelPump = isPayPassFuelPump;
  }


  public Merchant isPayPassTollBooth(Boolean isPayPassTollBooth) {
    
    this.isPayPassTollBooth = isPayPassTollBooth;
    return this;
  }

   /**
   * Boolean value which indicates if the toll booth is equipped with a PayPass card reader.
   * @return isPayPassTollBooth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the toll booth is equipped with a PayPass card reader.")

  public Boolean getIsPayPassTollBooth() {
    return isPayPassTollBooth;
  }


  public void setIsPayPassTollBooth(Boolean isPayPassTollBooth) {
    this.isPayPassTollBooth = isPayPassTollBooth;
  }


  public Merchant isPayPassDriveThrough(Boolean isPayPassDriveThrough) {
    
    this.isPayPassDriveThrough = isPayPassDriveThrough;
    return this;
  }

   /**
   * Boolean value which indicates if the drive thru is equipped with a PayPass card reader.
   * @return isPayPassDriveThrough
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the drive thru is equipped with a PayPass card reader.")

  public Boolean getIsPayPassDriveThrough() {
    return isPayPassDriveThrough;
  }


  public void setIsPayPassDriveThrough(Boolean isPayPassDriveThrough) {
    this.isPayPassDriveThrough = isPayPassDriveThrough;
  }


  public Merchant isPayPassRegister(Boolean isPayPassRegister) {
    
    this.isPayPassRegister = isPayPassRegister;
    return this;
  }

   /**
   * Boolean value which indicates if the register is equipped with a PayPass card reader.
   * @return isPayPassRegister
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the register is equipped with a PayPass card reader.")

  public Boolean getIsPayPassRegister() {
    return isPayPassRegister;
  }


  public void setIsPayPassRegister(Boolean isPayPassRegister) {
    this.isPayPassRegister = isPayPassRegister;
  }


  public Merchant isPayPassTicketing(Boolean isPayPassTicketing) {
    
    this.isPayPassTicketing = isPayPassTicketing;
    return this;
  }

   /**
   * Boolean value which indicates if the ticketing area is equipped with a PayPass card reader.
   * @return isPayPassTicketing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the ticketing area is equipped with a PayPass card reader.")

  public Boolean getIsPayPassTicketing() {
    return isPayPassTicketing;
  }


  public void setIsPayPassTicketing(Boolean isPayPassTicketing) {
    this.isPayPassTicketing = isPayPassTicketing;
  }


  public Merchant isPayPassVendingMachine(Boolean isPayPassVendingMachine) {
    
    this.isPayPassVendingMachine = isPayPassVendingMachine;
    return this;
  }

   /**
   * Boolean value which indicates if the vending machine is equipped with a PayPass card reader.
   * @return isPayPassVendingMachine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the vending machine is equipped with a PayPass card reader.")

  public Boolean getIsPayPassVendingMachine() {
    return isPayPassVendingMachine;
  }


  public void setIsPayPassVendingMachine(Boolean isPayPassVendingMachine) {
    this.isPayPassVendingMachine = isPayPassVendingMachine;
  }


  public Merchant isRepowerByCardSwipeSupported(Boolean isRepowerByCardSwipeSupported) {
    
    this.isRepowerByCardSwipeSupported = isRepowerByCardSwipeSupported;
    return this;
  }

   /**
   * Boolean value which indicates if the repower card load type at this merchant supports Card Swipe.
   * @return isRepowerByCardSwipeSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the repower card load type at this merchant supports Card Swipe.")

  public Boolean getIsRepowerByCardSwipeSupported() {
    return isRepowerByCardSwipeSupported;
  }


  public void setIsRepowerByCardSwipeSupported(Boolean isRepowerByCardSwipeSupported) {
    this.isRepowerByCardSwipeSupported = isRepowerByCardSwipeSupported;
  }


  public Merchant isRepowerByMoneyPakSupported(Boolean isRepowerByMoneyPakSupported) {
    
    this.isRepowerByMoneyPakSupported = isRepowerByMoneyPakSupported;
    return this;
  }

   /**
   * Boolean value which indicates if the repower card load type at this merchant supports MoneyPak.
   * @return isRepowerByMoneyPakSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Boolean value which indicates if the repower card load type at this merchant supports MoneyPak.")

  public Boolean getIsRepowerByMoneyPakSupported() {
    return isRepowerByMoneyPakSupported;
  }


  public void setIsRepowerByMoneyPakSupported(Boolean isRepowerByMoneyPakSupported) {
    this.isRepowerByMoneyPakSupported = isRepowerByMoneyPakSupported;
  }


  public Merchant latitude(String latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * The latitude of the merchant
   * @return latitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "38.670337", value = "The latitude of the merchant")

  public String getLatitude() {
    return latitude;
  }


  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }


  public Merchant locationName(String locationName) {
    
    this.locationName = locationName;
    return this;
  }

   /**
   * Merchant&#39;s Name
   * @return locationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "QUIK TRIP STORE 1", value = "Merchant's Name")

  public String getLocationName() {
    return locationName;
  }


  public void setLocationName(String locationName) {
    this.locationName = locationName;
  }


  public Merchant longitude(String longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * The longitude of the merchant.
   * @return longitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-90.443727", value = "The longitude of the merchant.")

  public String getLongitude() {
    return longitude;
  }


  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }


  public Merchant phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Merchant&#39;s phone number
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8165442210", value = "Merchant's phone number")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public Merchant postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The postal code of the Merchant location.
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "63366", value = "The postal code of the Merchant location.")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public Merchant websiteUrl(String websiteUrl) {
    
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Merchant&#39;s website URL address
   * @return websiteUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "www.mcdondalds.com", value = "Merchant's website URL address")

  public String getWebsiteUrl() {
    return websiteUrl;
  }


  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Merchant merchant = (Merchant) o;
    return Objects.equals(this.addressLine1, merchant.addressLine1) &&
        Objects.equals(this.addressLine2, merchant.addressLine2) &&
        Objects.equals(this.cashbackMaximumAmount, merchant.cashbackMaximumAmount) &&
        Objects.equals(this.category, merchant.category) &&
        Objects.equals(this.countryCode, merchant.countryCode) &&
        Objects.equals(this.countryName, merchant.countryName) &&
        Objects.equals(this.countrySubdivisionCode, merchant.countrySubdivisionCode) &&
        Objects.equals(this.countrySubdivisionName, merchant.countrySubdivisionName) &&
        Objects.equals(this.city, merchant.city) &&
        Objects.equals(this.distance, merchant.distance) &&
        Objects.equals(this.distanceUnit, merchant.distanceUnit) &&
        Objects.equals(this.easySavingsMerchantOfferId, merchant.easySavingsMerchantOfferId) &&
        Objects.equals(this.geocodingResult, merchant.geocodingResult) &&
        Objects.equals(this.id, merchant.id) &&
        Objects.equals(this.isPayPassConcession, merchant.isPayPassConcession) &&
        Objects.equals(this.isPayPassPharmacy, merchant.isPayPassPharmacy) &&
        Objects.equals(this.isPayPassFuelPump, merchant.isPayPassFuelPump) &&
        Objects.equals(this.isPayPassTollBooth, merchant.isPayPassTollBooth) &&
        Objects.equals(this.isPayPassDriveThrough, merchant.isPayPassDriveThrough) &&
        Objects.equals(this.isPayPassRegister, merchant.isPayPassRegister) &&
        Objects.equals(this.isPayPassTicketing, merchant.isPayPassTicketing) &&
        Objects.equals(this.isPayPassVendingMachine, merchant.isPayPassVendingMachine) &&
        Objects.equals(this.isRepowerByCardSwipeSupported, merchant.isRepowerByCardSwipeSupported) &&
        Objects.equals(this.isRepowerByMoneyPakSupported, merchant.isRepowerByMoneyPakSupported) &&
        Objects.equals(this.latitude, merchant.latitude) &&
        Objects.equals(this.locationName, merchant.locationName) &&
        Objects.equals(this.longitude, merchant.longitude) &&
        Objects.equals(this.phoneNumber, merchant.phoneNumber) &&
        Objects.equals(this.postalCode, merchant.postalCode) &&
        Objects.equals(this.websiteUrl, merchant.websiteUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine1, addressLine2, cashbackMaximumAmount, category, countryCode, countryName, countrySubdivisionCode, countrySubdivisionName, city, distance, distanceUnit, easySavingsMerchantOfferId, geocodingResult, id, isPayPassConcession, isPayPassPharmacy, isPayPassFuelPump, isPayPassTollBooth, isPayPassDriveThrough, isPayPassRegister, isPayPassTicketing, isPayPassVendingMachine, isRepowerByCardSwipeSupported, isRepowerByMoneyPakSupported, latitude, locationName, longitude, phoneNumber, postalCode, websiteUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Merchant {\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    cashbackMaximumAmount: ").append(toIndentedString(cashbackMaximumAmount)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    countrySubdivisionCode: ").append(toIndentedString(countrySubdivisionCode)).append("\n");
    sb.append("    countrySubdivisionName: ").append(toIndentedString(countrySubdivisionName)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    distanceUnit: ").append(toIndentedString(distanceUnit)).append("\n");
    sb.append("    easySavingsMerchantOfferId: ").append(toIndentedString(easySavingsMerchantOfferId)).append("\n");
    sb.append("    geocodingResult: ").append(toIndentedString(geocodingResult)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isPayPassConcession: ").append(toIndentedString(isPayPassConcession)).append("\n");
    sb.append("    isPayPassPharmacy: ").append(toIndentedString(isPayPassPharmacy)).append("\n");
    sb.append("    isPayPassFuelPump: ").append(toIndentedString(isPayPassFuelPump)).append("\n");
    sb.append("    isPayPassTollBooth: ").append(toIndentedString(isPayPassTollBooth)).append("\n");
    sb.append("    isPayPassDriveThrough: ").append(toIndentedString(isPayPassDriveThrough)).append("\n");
    sb.append("    isPayPassRegister: ").append(toIndentedString(isPayPassRegister)).append("\n");
    sb.append("    isPayPassTicketing: ").append(toIndentedString(isPayPassTicketing)).append("\n");
    sb.append("    isPayPassVendingMachine: ").append(toIndentedString(isPayPassVendingMachine)).append("\n");
    sb.append("    isRepowerByCardSwipeSupported: ").append(toIndentedString(isRepowerByCardSwipeSupported)).append("\n");
    sb.append("    isRepowerByMoneyPakSupported: ").append(toIndentedString(isRepowerByMoneyPakSupported)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

