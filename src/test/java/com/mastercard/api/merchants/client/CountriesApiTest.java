/*
 * Merchants Locations API
 * Merchants Locations API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.merchants.client;

import com.mastercard.api.merchants.ApiClient;
import com.mastercard.api.merchants.ApiException;
import com.mastercard.api.merchants.model.Countries;
import com.mastercard.api.merchants.model.CountrySubdivisions;
import com.mastercard.developer.interceptors.OkHttpOAuth1Interceptor;
import com.mastercard.developer.utils.AuthenticationUtils;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import java.security.PrivateKey;

/**
 * API tests for CountriesApi
 */
@Ignore
public class CountriesApiTest {

    private static final String BASE_URL = "https://sandbox.api.mastercard.com/locations/atms";
    private static final String CONSUMER_KEY = "yourconsumerkeystring";
    private static final String PKCS_12_KEY_FILE_PATH = "./path/to/your/signing-key.p12";
    private static final String SIGNIN_KEY_ALIAS = "yourkeyalias";
    private static final String SIGNIN_KEY_PASSWORD = "yourpassword";

    private ApiClient client;
    private PrivateKey signingKey;
    private final CountriesApi api = new CountriesApi();

    @Before
    public void setUp() throws Exception {
        signingKey = AuthenticationUtils.loadSigningKey(PKCS_12_KEY_FILE_PATH, SIGNIN_KEY_ALIAS, SIGNIN_KEY_PASSWORD);

        client = new ApiClient();
        client.setBasePath(BASE_URL);
        client.setConnectTimeout(60);
        client.setDebugging(true);
        client.setHttpClient(client
                .getHttpClient()
                .newBuilder()
                .addInterceptor(new OkHttpOAuth1Interceptor(CONSUMER_KEY, signingKey))
                .build()
        );

        api.setApiClient(client);
    }


    /**
     * Get a list of countries
     *
     * Returns a list of countries
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCountriesTest() throws ApiException {
        Countries response = api.getCountries();

        Assert.assertEquals("ABW",response.getCountries().get(0).getCountryCode());
        Assert.assertEquals("ARUBA",response.getCountries().get(0).getCountryName());
        System.out.println(response.getCountries().get(0).toString());
    }

    /**
     * Get a list of country subdivisions
     *
     * Returns a list of country subdivisions for a given country
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCountrySubdivisionsTest() throws ApiException {
        String countryCode = null;
        CountrySubdivisions response = api.getCountrySubdivisions("CAN");
        Assert.assertEquals("AB",response.getCountrySubdivisions().get(0).getCountrySubdivisionCode());
        Assert.assertEquals("ALBERTA",response.getCountrySubdivisions().get(0).getCountrySubdivisionName());
        System.out.println(response.getCountrySubdivisions().get(0).toString());
    }

}
