/*
 * Merchants Locations API
 * Merchants Locations API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.merchants.client;

import com.mastercard.api.merchants.ApiClient;
import com.mastercard.api.merchants.ApiException;
import com.mastercard.api.merchants.model.MerchantSearch;
import com.mastercard.api.merchants.model.Merchants;
import com.mastercard.developer.interceptors.OkHttpOAuth1Interceptor;
import com.mastercard.developer.utils.AuthenticationUtils;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import java.security.PrivateKey;

/**
 * API tests for MerchantsApi
 */
@Ignore
public class MerchantsApiTest {


    private static final String BASE_URL = "https://sandbox.api.mastercard.com/locations/merchants";
    private static final String CONSUMER_KEY = "yourconsumerkeystring";
    private static final String PKCS_12_KEY_FILE_PATH = "./path/to/your/signing-key.p12";
    private static final String SIGNIN_KEY_ALIAS = "yourkeyalias";
    private static final String SIGNIN_KEY_PASSWORD = "yourpassword";

    private ApiClient client;
    private PrivateKey signingKey;
    private final MerchantsApi api = new MerchantsApi();

    @Before
    public void setUp() throws Exception {
        signingKey = AuthenticationUtils.loadSigningKey(PKCS_12_KEY_FILE_PATH, SIGNIN_KEY_ALIAS, SIGNIN_KEY_PASSWORD);

        client = new ApiClient();
        client.setBasePath(BASE_URL);
        client.setConnectTimeout(60);
        client.setDebugging(true);
        client.setHttpClient(client
                .getHttpClient()
                .newBuilder()
                .addInterceptor(new OkHttpOAuth1Interceptor(CONSUMER_KEY, signingKey))
                .build()
        );

        api.setApiClient(client);
    }

    
    /**
     * Get a list of merchant details
     *
     * Returns detailed information on merchants based on the provided query parameters
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantsTest() throws ApiException {

        MerchantSearch merchantSearch = new MerchantSearch();
        merchantSearch.merchantType("paypass");
        merchantSearch.setLatitude("38.793904");
        merchantSearch.setLongitude("-90.571608");

        Merchants response = api.getMerchants(merchantSearch, 4, 0, 5, "MILE");

        Integer expectedOffset =  0;
        Assert.assertEquals(expectedOffset,response.getOffset());
        Assert.assertTrue("0",response.getMerchants().size() > 0);
        Assert.assertNotNull(response.getMerchants().get(0).getDistance());
        Assert.assertEquals("CARQUEST AUTO PARTS",response.getMerchants().get(0).getLocationName());
        Assert.assertEquals("1002 CAVE SPRINGS BLVD", response.getMerchants().get(0).getAddressLine1());
        Assert.assertEquals("63376", response.getMerchants().get(0).getPostalCode());
        Assert.assertEquals("38.793904",response.getMerchants().get(0).getLatitude());
        Assert.assertEquals("-90.571608",response.getMerchants().get(0).getLongitude());
    }
    
}
